CREATE TABLE CUSTOMER(
   ID INTEGER,
   Name VARCHAR(50) ,
   GENDER VARCHAR(50) ,
   LANGUAGES VARCHAR(50) ,
   CREATIONDATE DATE,
   PRIMARY KEY(ID)
);

CREATE TABLE EMAILBOUNCES(
   ID INTEGER,
   BOUNCETYPE VARCHAR(50) ,
   BOUNCEDATE DATE,
   CUSTOMERID INTEGER NOT NULL,
   PRIMARY KEY(ID),
   FOREIGN KEY(CUSTOMERID) REFERENCES CUSTOMER(ID)
);

CREATE TABLE PRODUCT(
   ID INTEGER,
   MAINPRODUCTID INTEGER,
   LANGUAGES VARCHAR(50) ,
   NAME VARCHAR(50) ,
   PRICE_EUR NUMERIC(15,2)  ,
   PRIMARY KEY(ID)
);

CREATE TABLE TRANSACTION(
   ID VARCHAR(50) ,
   CREATIONDATE DATE,
   CUSTOMERID INTEGER NOT NULL,
   PRODUCTID INTEGER NOT NULL,
   PRIMARY KEY(ID),
   FOREIGN KEY(CUSTOMERID) REFERENCES CUSTOMER(ID),
   FOREIGN KEY(PRODUCTID) REFERENCES PRODUCT(ID)
);
SELECT GENDER, LANGUAGES, COUNT(*) AS NumberOfCustomers
FROM CUSTOMER
GROUP BY GENDER, LANGUAGES;

SELECT EXTRACT(YEAR FROM CREATIONDATE) AS Year, GENDER, LANGUAGES, COUNT(*) AS NumberOfCustomers
FROM CUSTOMER
WHERE ID IN (SELECT DISTINCT CUSTOMERID FROM EMAILBOUNCES) = FALSE
GROUP BY Year, GENDER, LANGUAGES
ORDER BY Year;


SELECT C.ID, COALESCE(COUNT(T.ID), 0) AS NumberOfTransactions
FROM CUSTOMER C
LEFT JOIN TRANSACTION T ON C.ID = T.CUSTOMERID
GROUP BY C.ID;


SELECT C.ID, C.Name, SUM(P.PRICE_EUR) AS TotalPurchases
FROM CUSTOMER C
JOIN TRANSACTION T ON C.ID = T.CUSTOMERID
JOIN PRODUCT P ON T.PRODUCTID = P.ID
GROUP BY C.ID, C.Name
HAVING TotalPurchases >= 50;


SELECT DISTINCT C.ID, C.Name, C.GENDER, C.LANGUAGES, C.CREATIONDATE
FROM CUSTOMER C
WHERE C.ID NOT IN (SELECT CUSTOMERID FROM EMAILBOUNCES)
AND (C.GENDER = 'Mr' OR C.GENDER = 'Mrs' OR C.GENDER = 'Monsieur' OR C.GENDER = 'Madame')
AND (C.LANGUAGES = 'EN' OR C.LANGUAGES = 'FR')
AND C.CREATIONDATE = (SELECT MAX(CREATIONDATE) FROM CUSTOMER C2 WHERE C2.Name = C.Name);